pub fn main(): u0 {
    let result: i32 = power(2, 8)
    return result
}

pub struct math {
    pub fn zero: i32 => 0
    pub fn one: i32 => 1

    pub fn e: f32 => 2.71828
    pub fn pi: f32 => 3.14159

    pub fn square(n: i32): i32 => n * n
    pub fn cube(n: i32): i32 => n * n * n

    pub fn power(n: i32, exp: i32): i32 {
        if exp == 0 {
            return 1
        }

        let total: i32 = 1

        let i: i32 = 0
        while i < exp : i = i + 1 {
            total = total * n
        }

        return total
    }

    pub fn abs(x: i32): i32 {
        return if x < 0 then -x else x
    }

    pub fn max(a: i32, b: i32): i32 {
        return if a > b then a else b
    }

    pub fn min(a: i32, b: i32): i32 {
        return if a > b then b else a
    }

    fn isEven(n: i32): bool {
        return match n mod 2 {
            0 => true,
            else => false
        }
    }

    fn isOdd(n: i32): bool {
        return match n mod 2 {
            0 => false,
            else => true
        }
    }

    pub fn factorial(n: i32): i32 {
        return if n <= 1 then 1 else n * factorial(n - 1)
    }
}